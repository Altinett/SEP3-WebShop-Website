@page "/form"
@using BlazorWasm.Services
@using WebShop.Shared.Exceptions

@inject NavigationManager NavigationManager
@inject IValidationService ValidationService
@inject IFormService FormService

<div class="form-container">
    <div class="form-content">
        <div class="form-group">
            <form @onsubmit="ValidateForm">
                <div class="form-row">
                    <div class="form-pair">
                        <label for="FirstName">Fornavn</label>
                        <div class="form-input round">
                            <input placeholder="Fornavn" type="text" @bind="FirstName" id="FirstName" name="FirstName">
                        </div>
                    </div>
                    <div class="form-pair">
                        <label for="LastName">Efternavn</label>
                        <div class="form-input round">
                            <input placeholder="Efternavn" type="text" @bind="LastName" id="LastName" name="LastName">
                        </div>
                    </div>
                </div>
                
                <div class="form-row">
                    <div class="form-pair">
                        <label for="Address">Addresse</label>
                        <div class="form-input round">
                            <input placeholder="Addresse" type="text" @bind="Address" id="Address" name="Address">
                        </div>
                    </div>
                    <div class="form-pair">
                        <label for="ZipCode">Postnummer</label>
                        <div class="form-input round">
                            <input type="number" @bind="ZipCode" id="ZipCode" name="ZipCode" min="0">
                        </div>
                    </div>
                </div>


                <div class="form-pair">
                    <label for="PhoneNumber">Telefon nr.</label>
                    <div class="form-input round">
                        <input type="number" @bind="PhoneNumber" id="PhoneNumber" name="PhoneNumber" min="0">
                    </div>
                </div>
                <div class="form-pair">
                    <label for="Email">Email</label>
                    <div class="form-input round">
                        <input placeholder="Email" type="email" @bind="Email" id="Email" name="Email">
                    </div>
                </div>

                <br>
                <p class="validation-error">@ValidationMessage</p>
                <!-- disable submit until "FormIsValid" is true -->
                <div class="form-row">
                	<div class="secondary-button round" @onclick="GoBack">Tilbage</div>
                	<div class="primary-button round" @onclick="ValidateForm">Bekr√¶ft</div>
                </div>
            </form>
        </div>
        <OrderSummary ShowCheckout="false" />
    </div>
</div>

@code {
    public string FirstName { get; set; }
    public string LastName { get; set; }
    public string Address { get; set; }
    public int ZipCode { get; set; }
    public int PhoneNumber { get; set; }
    public string Email { get; set; }
    
    public bool FormIsValid = false;
    public string ValidationMessage = "";

    private void GoBack() {
        NavigationManager.NavigateTo("/basket");
    }

    protected override void OnInitialized() {
        FirstName = FormService.FirstName;
        LastName = FormService.LastName;
        Address = FormService.Address;
        ZipCode = FormService.ZipCode;
        PhoneNumber = FormService.PhoneNumber;
        Email = FormService.Email;

        base.OnInitialized();
    }
    
    private void ValidateForm() {
        ValidationMessage = "";

        try {
            FormService.FirstName = ValidationService.ValidateName(FirstName);
            FormService.LastName = ValidationService.ValidateName(LastName);
            FormService.Address = ValidationService.ValidateAddress(Address);
            FormService.ZipCode = ValidationService.ValidateZipCode(ZipCode);
            FormService.PhoneNumber = ValidationService.ValidatePhoneNumber(PhoneNumber);
            FormService.Email = ValidationService.ValidateEmail(Email);
            NavigationManager.NavigateTo("/payment");
        } catch (InvalidInputException e) {
            ValidationMessage = e.Message;
        } catch (Exception e) {
            Console.WriteLine(e.Message);
        }
    }
}
