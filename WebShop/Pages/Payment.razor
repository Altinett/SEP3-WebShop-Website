@page "/payment"
@using BlazorWasm.Services
@using WebShop.Shared.Exceptions
@inject NavigationManager NavigationManager
@inject IValidationService ValidationService
@inject IBasketService BasketService
@inject IFormService FormService


<div class="form-container">
	<div class="form-content">
		<div class="form-group">
			<form @onsubmit="ValidateForm">
				<div class="form-pair">
					<label for="Kortnummer">Kortnummer</label>
	                <div class="form-input round">
	                    <input type="text" @bind="CardNumber" id="CardNumber" name="CardNumber" min="0">
	                </div>
				</div>
				<div class="form-pair">
					<label for="ExpirationDate">Udløbsdato</label>
                    <div class="form-input round">
                    	<input type="date" @bind="ExpirationDate" id="ExpirationDate" name="ExpirationDate" min="<?php echo date('Y-m-d');?>">
                    </div>
				</div>
				<div class="form-pair">
					<label for="CVC">CVC</label>
	                <div class="form-input round">
	                    <input type="number" @bind="cvc" id="CVC" name="CVC" min="0">
	                </div>
				</div>
				<br>
				<p class="validation-error">@ValidationMessage</p>
				<div class="form-row">
					<div class="secondary-button round" @onclick="GoBack">Tilbage</div>
					<div class="primary-button round" @onclick="ValidateForm">Bekræft</div>
				</div>
			</form>
		</div>
		<OrderSummary ShowCheckout="false" />
	</div>
</div>


@code {
	public string CardNumber { get; set; }
	public DateTime ExpirationDate { get; set; } = DateTime.Today;
	public int cvc { get; set; }
	
	private string ValidationMessage = "";
	

	private async void ValidateForm() {
		ValidationMessage = "";
		try {
			FormService.CardNumber = ValidationService.ValidateCardNumber(CardNumber);
			FormService.ExpirationDate = ValidationService.ValidateExpirationDate(ExpirationDate);
			FormService.CVC = ValidationService.ValidateCvc(cvc);
			await FormService.SendForm();
			NavigationManager.NavigateTo("/receipt");
			BasketService.Clear();
		} catch (InvalidInputException e) {
			ValidationMessage = e.Message;
		} catch (Exception e) {
			Console.WriteLine(e.Message);
		}
	}

	private void GoBack() {
		NavigationManager.NavigateTo("/form");
	}
}