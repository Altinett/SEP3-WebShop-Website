@page "/payment"
@using BlazorWasm.Services
@using WebShop.Shared.Exceptions
@inject NavigationManager NavigationManager
@inject IValidationService ValidationService
@inject IBasketService BasketService
@inject IFormService FormService


<div class="forum-container">
	<div class="forum-content">
		 <div class="forum-group">
			<form @onsubmit="ValidateForm">
				<label for="Kortnummer">Kortnummer:</label><br>
				<div class="forum-input round">
					<input type="text" @bind="CardNumber" id="CardNumber" name="CardNumber" min="0">
				</div><br>
				<label for="ExpirationDate">Udløbsdato:</label><br>
				<div class="forum-input round">
					<input type="date" @bind="ExpirationDate" id="ExpirationDate" name="ExpirationDate" min="<?php echo date('Y-m-d');?>">
				</div><br>
				<label for="CVC">CVC:</label><br>
				<div class="forum-input round">
					<input type="number" @bind="cvc" id="CVC" name="CVC" min="0">
				</div><br><br>
				<p class="validation-error">@ValidationMessage</p>
				<div class="forum-content">
					<div class="secondary-button round forum-inline" @onclick="Previous">Tilbage</div>
					<div class="primary-button round forum-inline" @onclick="ValidateForm">Bekræft</div>
				</div>
			</form>
		</div>
	</div>
</div>


@code {
	public string CardNumber { get; set; }
	public DateTime ExpirationDate { get; set; }
	public int cvc { get; set; }
	
	private DateTime selectedDate;
	private string ValidationMessage = "";
	
	protected override void OnInitialized()
	{
		ExpirationDate = DateTime.Today;
		base.OnInitialized();
	}

	private async void ValidateForm()
	{
	// Update the status message based on validation
		ValidationMessage = "";
		try {
			FormService.CardNumber = ValidationService.ValidateCreditCard(CardNumber);
			FormService.ExpirationDate = ValidationService.ValidateExpirationDate(ExpirationDate);
			FormService.CVC = ValidationService.ValidateCvc(cvc);
			await FormService.SendForm();
			NavigationManager.NavigateTo("/receipt");
			BasketService.Clear();
		} catch (InvalidInputException e) {
			ValidationMessage = e.Message;
		} catch (Exception e) {
			Console.WriteLine(e.Message);
		}

	}

	private void Previous() {
		NavigationManager.NavigateTo("/form");
	}
}