@page "/Kvittering"
@using global::Shared
@using System.ComponentModel.Design.Serialization
@using System.Reflection.Emit


 <div id="invoice-POS">
    
    <center id="top">
      <div class="logo"></div>
      <div class="info"> 
	      <h2>Shadow Inc</h2>
      </div><!--End Info-->
    </center><!--End InvoiceTop-->
    
    <div id="mid" class="rePadding">
	
	    <div class="info reInline">
		    <div class="reBox">	<h2>Kunde Information</h2>
			    <p>Navn : @FirstName @LastName</p>
			    <p>Adresse : @Address, @ZipCode</p>
			    <p>Email : @Email</p>
			    <p>Telefon nr. : @PhoneNumber</p>
		    </div>
	    
		    <div class="reBox">
			    <h2>Firma Information</h2>
			    <p>Firma navn : Shadowshare inc</p>
			    <p>Mere information</p>
		    </div>
	       
		    <div class="reBox">
			    <h2>Betalings Information</h2> 
			    <p>Ordernr. : @FormService.getInstance().orderId</p>
			    <p>Forfaldsdato : DD/MM/YY</p>
		    </div>
	    </div>
	    
	    <div>
		    <div>
			    <hr>
			    <div class="reHeader">
				    <p>Item</p>
				    <div class="reProductInfo reInline">
					    <p>Antal</p>
					    <p>Pris pr.</p>
					    <p>Rel pris</p>
				    </div>
			    </div>
			    <hr>
			    @foreach (Product Product in _basketService.GetBasketItems().Values) {
					<div class="reInline">
					    <div class="reProducts">
						    <p>@(Product.name ?? "N/A")</p>
						    <p class="reDescription">
							    @Product.description
						    </p>
					    </div>
					    <div class="reProductInfo reInline">
						    <p>@Product.quantity</p>
						    <p>@(Product.Price) kr.</p>
						    <p>@(Product.Price*Product.quantity) kr.</p>
					    </div>
				    </div>
				    <hr>
			    }
				<br>
				<div class="reInline">
				    <div class="reProducts">
					    <p>Sub Total</p>
				    </div>
				    <div class="reProductInfo reInline">
                	    <p></p>
	                    <p></p>
					    <p>@(TotalPrice * 0.75) kr.</p>
				    </div>
			    </div>
		        <div class="reInline">
                    <div class="reProducts">
                	    <p>Tax</p>
                    </div>
                    <div class="reProductInfo reInline">
                	    <p></p>
	                    <p></p>
                	    <p>@(TotalPrice * 0.25) kr.</p>
                    </div>
                </div>			    
			    <hr>
		        <div class="reInline">
                    <div class="reProducts">
                	    <p>Total</p>
                    </div>
                    <div class="reProductInfo reInline">
                	    <p></p>
	                    <p></p>
                	    <p>@(TotalPrice) kr.</p>
                    </div>
		        </div>		
			    <hr>
			    
		    </div>
	     </div>
	      
    </div><!--End Invoice Mid-->
    
    <div id="bot">
		<div id="legalcopy">
			<p class="legal"><strong>Thank you for your business!</strong>  Payment is expected within 31 days; please process this invoice within that time. There will be a 5% interest charge per month on late invoices. 
			</p>
		</div>

	</div><!--End InvoiceBot-->
  </div><!--End Invoice-->


@code {
	// TODO Translate to danish and SUBTOTAL skal være prisen føre moms og noget???
	[Parameter] public string FirstName { get; set; }
	[Parameter] public string LastName { get; set; }
	[Parameter] public string Address { get; set; }
	[Parameter] public int ZipCode { get; set; }
	[Parameter] public int PhoneNumber { get; set; }
	[Parameter] public string Email { get; set; } 
	 
	private double TotalPrice { get; set; }
	private BasketService _basketService = BasketService.getInstance();
	private FormService _formService = FormService.getInstance();
	protected override Task OnInitializedAsync()
	{
		FirstName = _formService.FirstName;
		LastName = _formService.LastName;
		Address = _formService.Address;
		ZipCode = _formService.ZipCode;
		PhoneNumber = _formService.PhoneNumber;
		Email = _formService.Email;
		
		TotalPrice = _basketService.getBasketTotal();
		StateHasChanged();
		
		return base.OnInitializedAsync();
	}
}
