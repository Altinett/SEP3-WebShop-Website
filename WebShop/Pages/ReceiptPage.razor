@page "/Kvittering"
@using global::Shared
@using System.ComponentModel.Design.Serialization
@using System.Reflection.Emit
@inject NavigationManager Nvm


 <div id="invoice-POS">
    
    <center id="top">
      <div class="logo"></div>
      <div class="info"> 
	      <h2>Shadow Inc</h2>
      </div><!--End Info-->
    </center><!--End InvoiceTop-->
    
    <div id="mid">
	
	    <div class="info reInline">
		    <div class="reBox">	<h2>Contact Info</h2>
			    <p>
				    Name : @FirstName @LastName<br>
				    Address : @Address, @ZipCode<br>
				    Email : @Email<br>
				    Phone : @PhoneNumber<br>
			    </p>
		    </div>
	    
		    <div class="reBox">
			    <h2>Company Info</h2>
			    <p>
				    Company name : Shadowshare inc <br>
				    And more blablalblabalblablabla<br>
				    lablablablblablablablablblalbalblbalb <br>
				    blalbalb<br>
				    blablablabla <br>
			    </p>
		    </div>
	       
		    <div class="reBox">
			    <h2>Payment</h2> 
			    <p>
				    Forfaldsdato : DD/MM/YY <br>
				    Mængde : NaN DKK
			    </p>
		    </div>
	    </div>
	    
	    <div>
		    <div>
			    <hr>
			    <div class="reHeader">
				    <p>
					    Item
				    </p>
				    <div class="reProductInfo reInline">
					    <p>
						    Antal
					    </p>
					    <p>
						    Pris pr.
					    </p>
					    <p>
						    Rel pris
					    </p>
				    </div>
			    </div>
			    <hr>
			    
			    
			    <!-- Products -->
			    <div class="reInline">
				    <div class="reProducts">
					    <p>
						    Test
					    </p>
					    <p class="reDescription">
						    Beskrivelse 
					    </p>
				    </div>
				    <div class="reProductInfo reInline">
					    <p>
						    Antal
					    </p>
					    <p>
						    Pris pr.
					    </p>
					    <p>
						    Rel pris
					    </p>
				    </div>
			    </div>
			    <hr>
			    
			     <div class="reInline">
                				    <div class="reProducts">
                					    <p>
                						    Test
                					    </p>
                					    <p class="reDescription">
                						    Beskrivelse 
                					    </p>
                				    </div>
                				    <div class="reInline reProductInfo">
                					    <p>
                						    4
                					    </p>
                					    <p>
                						    5
                					    </p>
                					    <p>
                						    20
                					    </p>
                				    </div>
                			    </div>
                			    <hr>
			    
		    </div>
		     <div class="reInline">
            				    <div class="reProducts">
            					    <p>
            						    Test
            					    </p>
            					    <p class="reDescription">
            						    Beskrivelse 
            					    </p>
            					</div>
            				    <div class="reProductInfo reInline">
            					    <p>
            						    1
            					    </p>
            					    <p>
            						    2
            					    </p>
            					    <p>
            						    4
            					    </p>
            				    </div>
            			    </div>
                            <hr>			    
            		    

	    </div>
    </div><!--End Invoice Mid-->
    
    <div id="bot">
	    <div class="contents">
		    <!--
		    @foreach (Product product in _BasketItems)
		    {
			    <GridItem
				    Id=@product.Id
				    Img=@product.Img
				    name=@product.name
				    Price=@product.Price
				    InStock=@product.InStock
				    InBasket="false"
				    />
		    }
		    
		     -->
		    </div>
		   
	    
		<div id="legalcopy">
			<p class="legal"><strong>Thank you for your business!</strong>  Payment is expected within 31 days; please process this invoice within that time. There will be a 5% interest charge per month on late invoices. 
			</p>
		</div>

	</div><!--End InvoiceBot-->
  </div><!--End Invoice-->


@code {
	
	[Parameter] public string FirstName { get; set; }
	[Parameter] public string LastName { get; set; }
	[Parameter] public string Address { get; set; }
	[Parameter] public int ZipCode { get; set; }
	[Parameter] public int PhoneNumber { get; set; }
	[Parameter] public string Email { get; set; } 
	
	private List<Product> _BasketItems { get; set; }    
	private double totalPrice { get; set; }
	
	protected override Task OnInitializedAsync()
	{
		var instance = FormService.getInstance();
		FirstName = instance.FirstName;
		LastName = instance.LastName;
		Address = instance.Address;
		ZipCode = instance.ZipCode;
		PhoneNumber = instance.PhoneNumber;
		Email = instance.Email;
		
		BasketService.getInstance();
		UpdateBasket();
		return base.OnInitializedAsync();
	}
	
	public void UpdateBasket()
	{
		BasketService basketService = BasketService.getInstance();
		_BasketItems = basketService.GetBasketItems();
		totalPrice = basketService.getBasketTotal();
		StateHasChanged();
	}
	
	public void test()
	{
		FormService instance = FormService.getInstance();
	}
}
