@page "/betaling"
@using WebShop.Services.HTTP
@inject NavigationManager Nvm

<div class="forum-container">
  <div class="forum-content">
     <div class="forum-group">
        <form @onsubmit="ValidateForm">
          <label for="Kortnummer">Kortnummer:</label><br>
          <div class="forum-input round">
            <input type="text" @bind="CardNumber" id="CardNumber" name="CardNumber" min="0">
          </div><br>
          <label for="ExpirationDate">Udløbsdato:</label><br>
          <div class="forum-input round">
            <input type="date" @bind="ExpirationDate" id="ExpirationDate" name="ExpirationDate" min="<?php echo date('Y-m-d');?>">
          </div><br>
          <label for="CVC">CVC:</label><br>
          <div class="forum-input round">
            <input type="number" @bind="CVC" id="CVC" name="CVC" min="0">
          </div><br><br>
          <p class="validation-error">@ValidationMessage</p>
          <div class="forum-content">
            <div class="secondary-button round forum-inline" @onclick="Previous">Tilbage</div>
            <div class="primary-button round forum-inline" @onclick="ValidateForm">Bekræft</div>
          </div>
          
        </form>
      </div>
  </div>
</div>


@code {
  
  [Parameter] public string CardNumber { get; set; }
  [Parameter] public DateTime ExpirationDate { get; set; }
  [Parameter] public int CVC { get; set; }
  private DateTime selectedDate;
  private string ValidationMessage = "";
  private FormService _formService = FormService.getInstance();

  
  protected override void OnInitialized()
  {
    ExpirationDate = DateTime.Today;
    base.OnInitialized();
  }

  private async void ValidateForm()
  {
  // Update the status message based on validation
    ValidationMessage = "";
    ValidationService validationService = ValidationService.GetInstance();
    
    try
    {
      _formService.CardNumber = validationService.ValidateCreditcard(CardNumber);
      _formService.ExpirationDate = validationService.ValidateExperationDate(ExpirationDate);
      _formService.CVC = validationService.ValidateCVC(CVC);
      await _formService.sendToLogic();

      Nvm.NavigateTo("/Kvittering");
      BasketService.getInstance().RemoveAll();
    }
    catch (InvalidInputException e)
    {
      ValidationMessage = e.Message;
    }
    catch (Exception e)
    {
      Console.WriteLine(e.Message);
    }

  }

  private void Previous()
  {
    Nvm.NavigateTo("/form");
  }
}