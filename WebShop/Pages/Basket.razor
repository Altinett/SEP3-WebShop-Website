@page "/basket"
@using global::Shared
@using BlazorWasm.Services

@inject NavigationManager NavigationManager
@inject IBasketService BasketService

<div class="bp-container">
	
	<div class="bp-top">
		<div class="icon">
			<svg xmlns="http://www.w3.org/2000/svg" class="ionicon" viewBox="0 0 512 512"><circle cx="176" cy="416" r="16" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32"/><circle cx="400" cy="416" r="16" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32"/><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" d="M48 80h64l48 272h256"/><path d="M160 288h249.44a8 8 0 007.85-6.43l28.8-144a8 8 0 00-7.85-9.57H128" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32"/></svg>
		</div>
		Din indkøbskurv
		<div class="bp-basket-amount">
			(@BasketItems.Count varer)
		</div>
	</div>
	<div class="bp-content">
		<div class="bp-scroll-box">
			<div class="bp-basket-content">
				@if (BasketItems.Values.Count == 0) {
					<div class="bp-empty">Din indkøbskurv er tom</div>
				} else {
					@foreach (Product product in BasketItems.Values) {
						<BasketItem 
							Id=@product.Id
							Name=@product.name
							Quantity=@product.quantity
							Price=@product.Price
							Image=@product.Image
							/>
					}
				}
				
			</div>
		</div>
		<OrderSummary />
	</div>
</div>


@code {
	private Dictionary<int, Product> BasketItems { get; set; }

	public void UpdateBasket() {
		BasketItems = BasketService.GetBasketItems();
		StateHasChanged();
	}

	protected override Task OnInitializedAsync() {
		BasketService.OnChanged(_ => UpdateBasket());
		UpdateBasket();
		return base.OnInitializedAsync();
	}

}