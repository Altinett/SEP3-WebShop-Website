@using global::Shared
@using WebShop.Pages
@using BlazorWasm.Services.Http
@inject NavigationManager Nvm
@using BlazorWasm.Services.Http
@using BlazorWasm.Services
@inject IBasketService BasketService
@inject IProductService ProductService

<div class="grid-item-container">
	<div class="grid-item clipped" @onclick="_ => GoToDetails()">
		<img src="data:image/png;base64, @Img" />
		<!--<img src="@Img"/>-->
		<a class="title" >@Name</a>
		<div class="grid-content-line"></div>
		
		<div class="bottom">
			<div class="price">@Price kr</div>
			@if (amount > 20) {
				<div class="stock-status in-stock">20+ på lager</div>
			} else {
				<div class="stock-status in-stock">@amount på lager</div>
			}
		</div>
		<div class="row">
			@if (InBasket == true) {
        		<div class="button secondary" @onclick="RemoveFromBasket">
        			<Icon Name="basket"/>
        			<a>Fjern fra kurv</a>
        		</div>
	        }
        	<div class="button" @onclick="_ => AddToBasket()">
        		<Icon Name="basket"/>
        		<a>Læg i kurv</a>
        	</div>
		</div>
	

	</div>
</div>

@code {
	[Parameter] public int Id { get; set; }
	[Parameter] public string Img { get; set; }
    [Parameter] public string Name { get; set; }
	[Parameter] public double Price { get; set; }
	[Parameter] public bool InStock { get; set; }
	[Parameter] public bool? InBasket { get; set; } 
	[Parameter] public int? amount { get; set; }
	[Parameter] public int quantity { get; set; }
	[Parameter] public string description { get; set; }
	[Parameter] public object context { get; set; }
	private Product product { get; set; }
	private bool isButtonClick = false;


	// FORMATER PRISEN 29,85 kr
	public string PrettyPrice() {
		return "";
	}
	protected override void OnInitialized()
	{
		product = (Product)context;
		
		int? productAmount = BasketService.GetProductAmount(Id);
		if (productAmount != null)
			amount = productAmount;
		InStock = amount > 0;
		
		StateHasChanged();
		base.OnInitialized();
	}

	private void AddToBasket() {
		isButtonClick = true;
		if (InStock) {
			InStock = BasketService.AddItem(Id);
			amount -= 1;
			StateHasChanged();
		};
	}

	private void RemoveFromBasket() {
		isButtonClick = true;
		BasketService.RemoveItem(Id);
	}

	public void GoToDetails() {
		if (!isButtonClick) {
			product.amount = amount.Value;
			ProductService.LastReviewedProduct = product;
			Nvm.NavigateTo("/product");
		} else {
			isButtonClick = false;
		}
		
		//Nvm.NavigateTo("/browse/product/{Id}");
	}
}

